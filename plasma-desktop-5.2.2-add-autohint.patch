diff -urN plasma-desktop-5.2.2/kcms/fonts/fonts.cpp plasma-desktop-5.2.2-patched/kcms/fonts/fonts.cpp
--- plasma-desktop-5.2.2/kcms/fonts/fonts.cpp	2015-03-19 21:48:46.000000000 +1000
+++ plasma-desktop-5.2.2-patched/kcms/fonts/fonts.cpp	2015-03-30 21:57:41.299049306 +1000
@@ -303,6 +303,13 @@
     QString hintingText(i18n("Hinting is a process used to enhance the quality of fonts at small sizes."));
     hintingStyle->setWhatsThis(hintingText);
     hintingLabel->setWhatsThis(hintingText);
+
+    useBCI = new QCheckBox(ki18n("Use bytecode interpreter").toString("openmandriva-kde-translation"), mw);
+    layout->addRow(useBCI);
+
+    QString bciWhatsThis(ki18n("A method of hinting that often improves the appearance of TrueType fonts.").toString("openmandriva-kde-translation"));
+    useBCI->setWhatsThis( bciWhatsThis );
+
     load();
     enableWidgets();
     setMainWidget(mw);
@@ -312,6 +319,7 @@
     connect(excludeTo, SIGNAL(valueChanged(double)), SLOT(changed()));
     connect(subPixelType, SIGNAL(activated(QString)), SLOT(changed()));
     connect(hintingStyle, SIGNAL(activated(QString)), SLOT(changed()));
+    connect(useBCI, SIGNAL(toggled(bool)), SLOT(changed()));
 }
 
 bool FontAASettings::load()
@@ -351,6 +359,8 @@
 
     hintingStyle->setCurrentIndex(getIndex(hStyle));
 
+    useBCI->setChecked(!xft.getAutohint());
+
     enableWidgets();
 
     return xft.aliasingEnabled();
@@ -394,6 +404,9 @@
         }
     }
     mod = true;
+
+    xft.setAutohint( !useBCI->isChecked() );
+
     kglobals.sync();
 
     if (!mod) {
@@ -412,6 +425,7 @@
     excludeTo->setValue(15.0);
     subPixelType->setCurrentIndex(getIndex(KXftConfig::SubPixel::NotSet));
     hintingStyle->setCurrentIndex(getIndex(KXftConfig::Hint::NotSet));
+    useBCI->setChecked(true);
     enableWidgets();
 }
 
diff -urN plasma-desktop-5.2.2/kcms/fonts/fonts.h plasma-desktop-5.2.2-patched/kcms/fonts/fonts.h
--- plasma-desktop-5.2.2/kcms/fonts/fonts.h	2015-03-19 21:48:46.000000000 +1000
+++ plasma-desktop-5.2.2-patched/kcms/fonts/fonts.h	2015-03-30 21:43:04.186009391 +1000
@@ -103,6 +103,7 @@
 private:
 
     QCheckBox *excludeRange;
+    QCheckBox *useBCI;
     KDoubleNumInput *excludeFrom;
     KDoubleNumInput *excludeTo;
     QComboBox *subPixelType;
diff -urN plasma-desktop-5.2.2/kcms/fonts/kxftconfig.cpp plasma-desktop-5.2.2-patched/kcms/fonts/kxftconfig.cpp
--- plasma-desktop-5.2.2/kcms/fonts/kxftconfig.cpp	2015-03-19 21:48:46.000000000 +1000
+++ plasma-desktop-5.2.2-patched/kcms/fonts/kxftconfig.cpp	2015-03-30 23:55:00.671369648 +1000
@@ -249,6 +249,7 @@
     m_excludePixelRange.reset();
     m_subPixel.reset();
     m_antiAliasing.reset();
+    m_autohint.reset();
 
     QFile f(m_file);
 
@@ -308,6 +309,7 @@
             newConfig.setSubPixelType(m_subPixel.type);
             newConfig.setHintStyle(m_hint.style);
             newConfig.setAntiAliasing(m_antiAliasing.state);
+            newConfig.setAutohint(m_autohint.state);
 
             ok = newConfig.changed() ? newConfig.apply() : true;
             if (ok) {
@@ -331,6 +333,7 @@
                         applySubPixelType();
                         applyHintStyle();
                         applyAntiAliasing();
+                        applyAutohint();
                         applyExcludeRange(false);
                         applyExcludeRange(true);
 
@@ -550,6 +553,10 @@
                                 m_antiAliasing.node = n;
                                 m_antiAliasing.state = str.toLower() != "false" ?
                                                        AntiAliasing::Enabled : AntiAliasing::Disabled;
+                            } else if (!(str = getEntry(ene, "bool", 2, "name", "autohint", "mode",
+                                                       "assign")).isNull()) {
+                                m_autohint.node = n;
+                                m_autohint.state = str.toLower() != "false";
                             }
                         }
                     }
@@ -814,6 +821,41 @@
     }
 }
 
+bool KXftConfig::getAutohint() const
+{
+    return m_autohint.state;
+}
+
+void KXftConfig::setAutohint( bool state )
+{
+    if(state!=m_autohint.state)
+    {
+        m_autohint.state = state;
+        m_madeChanges = true;
+    }
+}
+
+
+void KXftConfig::applyAutohint()
+{
+    QDomElement matchNode = m_doc.createElement("match"),
+                typeNode  = m_doc.createElement("bool"),
+                editNode  = m_doc.createElement("edit");
+    QDomText    typeText  = m_doc.createTextNode(m_autohint.state ? "true" : "false");
+
+    matchNode.setAttribute("target", "font");
+    editNode.setAttribute("mode", "assign");
+    editNode.setAttribute("name", "autohint");
+    editNode.appendChild(typeNode);
+    typeNode.appendChild(typeText);
+    matchNode.appendChild(editNode);
+    if(!m_autohint.node.isNull())
+        m_doc.documentElement().removeChild(m_autohint.node);
+    m_doc.documentElement().appendChild(matchNode);
+    m_autohint.node=matchNode;
+}
+
+
 // KXftConfig only parses one config file, user's .fonts.conf usually.
 // If that one doesn't exist, then KXftConfig doesn't know if antialiasing
 // is enabled or not. So try to find out the default value from the default font.
diff -urN plasma-desktop-5.2.2/kcms/fonts/kxftconfig.h plasma-desktop-5.2.2-patched/kcms/fonts/kxftconfig.h
--- plasma-desktop-5.2.2/kcms/fonts/kxftconfig.h	2015-03-19 21:48:46.000000000 +1000
+++ plasma-desktop-5.2.2-patched/kcms/fonts/kxftconfig.h	2015-03-30 22:14:29.000000000 +1000
@@ -140,6 +140,19 @@
 		enum State state;
     };
 
+    struct Autohint : public Item {
+        Autohint(bool s, QDomNode &n) : Item(n), state(s) {}
+        Autohint(bool s=false)         : state(s)          {}
+
+        void reset()
+        {
+            Item::reset();
+            state=false;
+        }
+
+        bool state;
+    };
+
 public:
 
     explicit KXftConfig();
@@ -156,6 +169,8 @@
     void        setHintStyle(Hint::Style style);
     void        setAntiAliasing(AntiAliasing::State state);
     AntiAliasing::State getAntiAliasing() const;
+    void        setAutohint(bool state);
+    bool        getAutohint() const;
     bool        changed()
     {
         return m_madeChanges;
@@ -172,6 +187,7 @@
     void        applySubPixelType();
     void        applyHintStyle();
     void        applyAntiAliasing();
+    void        applyAutohint();
     void        setHinting(bool set);
     void        applyHinting();
     void        applyExcludeRange(bool pixel);
@@ -184,6 +200,7 @@
     Hint               m_hint;
     Hinting            m_hinting;
     AntiAliasing       m_antiAliasing;
+    Autohint           m_autohint;
     QDomDocument       m_doc;
     QString            m_file;
     bool               m_madeChanges;
